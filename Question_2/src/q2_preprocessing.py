# -*- coding: utf-8 -*-
"""Q2_analysis.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MWQWOe1vMYQDqiu8Ujkocz7j0izLpF3D
"""

import pandas as pd

# Reading the CSV file
file_path = "/content/StudentsPerformance.csv"
student_data = pd.read_csv(file_path)

# Displaying summary statistics of the dataset
print("Summary of the dataset:")
print(student_data.describe())

# Converting the DataFrame to ensure data frame structure
student_data = pd.DataFrame(student_data)

#Preprocessing the data to perform the analysis # Changing the categorical values into numerical class values
student_data['gender'].replace(['female', 'male'], [0, 1], inplace=True)
student_data['test preparation course'].replace(['none', 'completed'], [0, 1], inplace=True)
#Creating a new column total score
student_data['Total score'] = student_data['math score'] + student_data['writing score'] + student_data['reading score']

# Displaying column names and dimensions
print("Column names:")
print(student_data.columns)
print("\nDimensions:")
print(student_data.shape)

# Displaying the top and bottom rows of the DataFrame
print("\nTop rows:")
print(student_data.head())
print("\nBottom rows:")
print(student_data.tail())

# Displaying the data structure
print("\nData Structure:")
print(student_data.info())

# Converting object columns to categorical columns
student_data['gender'] = pd.Categorical(student_data['gender'])
student_data['race/ethnicity'] = pd.Categorical(student_data['race/ethnicity'])
student_data['parental level of education'] = pd.Categorical(student_data['parental level of education'])
student_data['lunch'] = pd.Categorical(student_data['lunch'])
student_data['test preparation course'] = pd.Categorical(student_data['test preparation course'])

# Removing unnecessary columns
student_data.drop(columns=['lunch'], inplace=True)

# Displaying summary statistics after removing unnecessary columns
print("\nSummary after removing unnecessary columns:")
print(student_data.describe())

# Checking for missing values
print("\nAny missing values:")
print(student_data.isna().any().any())

# Saving the clean data
clean_file_path = "/content/clean_data_file.csv"
student_data.to_csv(clean_file_path, index=False)



